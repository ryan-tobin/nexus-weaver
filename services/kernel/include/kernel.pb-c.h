/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: kernel.proto */

#ifndef PROTOBUF_C_kernel_2eproto__INCLUDED
#define PROTOBUF_C_kernel_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1004001 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct Nexusweaver__Kernel__V1__ResourceLimits Nexusweaver__Kernel__V1__ResourceLimits;
typedef struct Nexusweaver__Kernel__V1__ProcessInfo Nexusweaver__Kernel__V1__ProcessInfo;
typedef struct Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry;
typedef struct Nexusweaver__Kernel__V1__StartProcessRequest Nexusweaver__Kernel__V1__StartProcessRequest;
typedef struct Nexusweaver__Kernel__V1__StartProcessResponse Nexusweaver__Kernel__V1__StartProcessResponse;
typedef struct Nexusweaver__Kernel__V1__StopProcessRequest Nexusweaver__Kernel__V1__StopProcessRequest;
typedef struct Nexusweaver__Kernel__V1__StopProcessResponse Nexusweaver__Kernel__V1__StopProcessResponse;
typedef struct Nexusweaver__Kernel__V1__GetProcessRequest Nexusweaver__Kernel__V1__GetProcessRequest;
typedef struct Nexusweaver__Kernel__V1__GetProcessResponse Nexusweaver__Kernel__V1__GetProcessResponse;
typedef struct Nexusweaver__Kernel__V1__ListProcessesRequest Nexusweaver__Kernel__V1__ListProcessesRequest;
typedef struct Nexusweaver__Kernel__V1__ListProcessesResponse Nexusweaver__Kernel__V1__ListProcessesResponse;
typedef struct Nexusweaver__Kernel__V1__UpdateLimitsRequest Nexusweaver__Kernel__V1__UpdateLimitsRequest;
typedef struct Nexusweaver__Kernel__V1__UpdateLimitsResponse Nexusweaver__Kernel__V1__UpdateLimitsResponse;
typedef struct Nexusweaver__Kernel__V1__StreamLogsRequest Nexusweaver__Kernel__V1__StreamLogsRequest;
typedef struct Nexusweaver__Kernel__V1__LogEntry Nexusweaver__Kernel__V1__LogEntry;
typedef struct Nexusweaver__Kernel__V1__ProcessStats Nexusweaver__Kernel__V1__ProcessStats;
typedef struct Nexusweaver__Kernel__V1__GetStatsRequest Nexusweaver__Kernel__V1__GetStatsRequest;
typedef struct Nexusweaver__Kernel__V1__GetStatsResponse Nexusweaver__Kernel__V1__GetStatsResponse;
typedef struct Nexusweaver__Kernel__V1__HealthCheckRequest Nexusweaver__Kernel__V1__HealthCheckRequest;
typedef struct Nexusweaver__Kernel__V1__HealthCheckResponse Nexusweaver__Kernel__V1__HealthCheckResponse;


/* --- enums --- */

/*
 * Service status
 */
typedef enum _Nexusweaver__Kernel__V1__HealthCheckResponse__ServingStatus {
  NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__UNKNOWN = 0,
  NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__SERVING = 1,
  NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__NOT_SERVING = 2,
  NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__SERVICE_UNKNOWN = 3
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS)
} Nexusweaver__Kernel__V1__HealthCheckResponse__ServingStatus;
/*
 * Process state enumeration
 */
typedef enum _Nexusweaver__Kernel__V1__ProcessState {
  NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_UNSPECIFIED = 0,
  NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_INIT = 1,
  NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_RUNNING = 2,
  NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_STOPPED = 3,
  NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_FAILED = 4,
  NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_TERMINATED = 5
    PROTOBUF_C__FORCE_ENUM_TO_BE_INT_SIZE(NEXUSWEAVER__KERNEL__V1__PROCESS_STATE)
} Nexusweaver__Kernel__V1__ProcessState;

/* --- messages --- */

/*
 * Resource limits for a process
 */
struct  Nexusweaver__Kernel__V1__ResourceLimits
{
  ProtobufCMessage base;
  /*
   * Memory limit in bytes (0 = unlimited)
   */
  uint64_t memory_bytes;
  /*
   * CPU shares (relative weight, default 1024)
   */
  uint32_t cpu_shares;
  /*
   * CPU quota in microseconds per period
   */
  uint32_t cpu_quota_us;
  /*
   * CPU period in microseconds (default 100000 = 100ms)
   */
  uint32_t cpu_period_us;
  /*
   * Maximum number of PIDs (0 = unlimited)
   */
  uint32_t pids_limit;
};
#define NEXUSWEAVER__KERNEL__V1__RESOURCE_LIMITS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__resource_limits__descriptor) \
    , 0, 0, 0, 0, 0 }


struct  Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry
{
  ProtobufCMessage base;
  char *key;
  char *value;
};
#define NEXUSWEAVER__KERNEL__V1__PROCESS_INFO__ENVIRONMENT_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__process_info__environment_entry__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * Process information
 */
struct  Nexusweaver__Kernel__V1__ProcessInfo
{
  ProtobufCMessage base;
  /*
   * Unique process identifier
   */
  char *id;
  /*
   * Process name
   */
  char *name;
  /*
   * System process ID
   */
  int32_t pid;
  /*
   * Current process state
   */
  Nexusweaver__Kernel__V1__ProcessState state;
  /*
   * Command to execute
   */
  char *command;
  /*
   * Working directory
   */
  char *working_dir;
  /*
   * Resource limits
   */
  Nexusweaver__Kernel__V1__ResourceLimits *limits;
  /*
   * Process start time (Unix timestamp)
   */
  int64_t start_time;
  /*
   * User ID
   */
  uint32_t uid;
  /*
   * Group ID
   */
  uint32_t gid;
  /*
   * Environment variables
   */
  size_t n_environment;
  Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry **environment;
};
#define NEXUSWEAVER__KERNEL__V1__PROCESS_INFO__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__process_info__descriptor) \
    , (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, 0, NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_UNSPECIFIED, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, NULL, 0, 0, 0, 0,NULL }


/*
 * Request to start a process
 */
struct  Nexusweaver__Kernel__V1__StartProcessRequest
{
  ProtobufCMessage base;
  /*
   * Process configuration
   */
  Nexusweaver__Kernel__V1__ProcessInfo *process;
};
#define NEXUSWEAVER__KERNEL__V1__START_PROCESS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__start_process_request__descriptor) \
    , NULL }


/*
 * Response from starting a process
 */
struct  Nexusweaver__Kernel__V1__StartProcessResponse
{
  ProtobufCMessage base;
  /*
   * Started process info
   */
  Nexusweaver__Kernel__V1__ProcessInfo *process;
};
#define NEXUSWEAVER__KERNEL__V1__START_PROCESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__start_process_response__descriptor) \
    , NULL }


/*
 * Request to stop a process
 */
struct  Nexusweaver__Kernel__V1__StopProcessRequest
{
  ProtobufCMessage base;
  /*
   * Process ID to stop
   */
  char *process_id;
  /*
   * Grace period in seconds before force kill
   */
  uint32_t grace_period;
};
#define NEXUSWEAVER__KERNEL__V1__STOP_PROCESS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__stop_process_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0 }


/*
 * Response from stopping a process
 */
struct  Nexusweaver__Kernel__V1__StopProcessResponse
{
  ProtobufCMessage base;
  /*
   * Final process state
   */
  Nexusweaver__Kernel__V1__ProcessState final_state;
};
#define NEXUSWEAVER__KERNEL__V1__STOP_PROCESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__stop_process_response__descriptor) \
    , NEXUSWEAVER__KERNEL__V1__PROCESS_STATE__PROCESS_STATE_UNSPECIFIED }


/*
 * Request to get process information
 */
struct  Nexusweaver__Kernel__V1__GetProcessRequest
{
  ProtobufCMessage base;
  /*
   * Process ID
   */
  char *process_id;
};
#define NEXUSWEAVER__KERNEL__V1__GET_PROCESS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__get_process_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * Response with process information
 */
struct  Nexusweaver__Kernel__V1__GetProcessResponse
{
  ProtobufCMessage base;
  /*
   * Process information
   */
  Nexusweaver__Kernel__V1__ProcessInfo *process;
};
#define NEXUSWEAVER__KERNEL__V1__GET_PROCESS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__get_process_response__descriptor) \
    , NULL }


/*
 * Request to list processes
 */
struct  Nexusweaver__Kernel__V1__ListProcessesRequest
{
  ProtobufCMessage base;
  /*
   * Filter by state (empty = all states)
   */
  size_t n_states;
  Nexusweaver__Kernel__V1__ProcessState *states;
  /*
   * Filter by name prefix
   */
  char *name_prefix;
};
#define NEXUSWEAVER__KERNEL__V1__LIST_PROCESSES_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__list_processes_request__descriptor) \
    , 0,NULL, (char *)protobuf_c_empty_string }


/*
 * Response with process list
 */
struct  Nexusweaver__Kernel__V1__ListProcessesResponse
{
  ProtobufCMessage base;
  /*
   * List of processes
   */
  size_t n_processes;
  Nexusweaver__Kernel__V1__ProcessInfo **processes;
};
#define NEXUSWEAVER__KERNEL__V1__LIST_PROCESSES_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__list_processes_response__descriptor) \
    , 0,NULL }


/*
 * Request to update resource limits
 */
struct  Nexusweaver__Kernel__V1__UpdateLimitsRequest
{
  ProtobufCMessage base;
  /*
   * Process ID
   */
  char *process_id;
  /*
   * New resource limits
   */
  Nexusweaver__Kernel__V1__ResourceLimits *limits;
};
#define NEXUSWEAVER__KERNEL__V1__UPDATE_LIMITS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__update_limits_request__descriptor) \
    , (char *)protobuf_c_empty_string, NULL }


/*
 * Response from updating limits
 */
struct  Nexusweaver__Kernel__V1__UpdateLimitsResponse
{
  ProtobufCMessage base;
  /*
   * Updated process info
   */
  Nexusweaver__Kernel__V1__ProcessInfo *process;
};
#define NEXUSWEAVER__KERNEL__V1__UPDATE_LIMITS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__update_limits_response__descriptor) \
    , NULL }


/*
 * Request to stream logs
 */
struct  Nexusweaver__Kernel__V1__StreamLogsRequest
{
  ProtobufCMessage base;
  /*
   * Process ID
   */
  char *process_id;
  /*
   * Follow log output
   */
  protobuf_c_boolean follow;
  /*
   * Number of lines from the end (0 = all)
   */
  uint32_t tail_lines;
};
#define NEXUSWEAVER__KERNEL__V1__STREAM_LOGS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__stream_logs_request__descriptor) \
    , (char *)protobuf_c_empty_string, 0, 0 }


/*
 * Log entry
 */
struct  Nexusweaver__Kernel__V1__LogEntry
{
  ProtobufCMessage base;
  /*
   * Timestamp (Unix nano)
   */
  int64_t timestamp;
  /*
   * Log level
   */
  char *level;
  /*
   * Log message
   */
  char *message;
  /*
   * Source (stdout/stderr)
   */
  char *source;
};
#define NEXUSWEAVER__KERNEL__V1__LOG_ENTRY__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__log_entry__descriptor) \
    , 0, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/*
 * Process statistics
 */
struct  Nexusweaver__Kernel__V1__ProcessStats
{
  ProtobufCMessage base;
  /*
   * Current memory usage in bytes
   */
  uint64_t memory_current;
  /*
   * Peak memory usage in bytes
   */
  uint64_t memory_peak;
  /*
   * CPU usage percentage
   */
  double cpu_usage_percent;
  /*
   * Total CPU time in microseconds
   */
  uint64_t cpu_time_us;
  /*
   * Bytes read
   */
  uint64_t io_read_bytes;
  /*
   * Bytes written
   */
  uint64_t io_write_bytes;
  /*
   * Number of threads
   */
  uint32_t num_threads;
};
#define NEXUSWEAVER__KERNEL__V1__PROCESS_STATS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__process_stats__descriptor) \
    , 0, 0, 0, 0, 0, 0, 0 }


/*
 * Request for process statistics
 */
struct  Nexusweaver__Kernel__V1__GetStatsRequest
{
  ProtobufCMessage base;
  /*
   * Process ID
   */
  char *process_id;
};
#define NEXUSWEAVER__KERNEL__V1__GET_STATS_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__get_stats_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * Response with process statistics
 */
struct  Nexusweaver__Kernel__V1__GetStatsResponse
{
  ProtobufCMessage base;
  /*
   * Process statistics
   */
  Nexusweaver__Kernel__V1__ProcessStats *stats;
};
#define NEXUSWEAVER__KERNEL__V1__GET_STATS_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__get_stats_response__descriptor) \
    , NULL }


/*
 * Health check request
 */
struct  Nexusweaver__Kernel__V1__HealthCheckRequest
{
  ProtobufCMessage base;
  /*
   * Service name to check
   */
  char *service;
};
#define NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_REQUEST__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__health_check_request__descriptor) \
    , (char *)protobuf_c_empty_string }


/*
 * Health check response
 */
struct  Nexusweaver__Kernel__V1__HealthCheckResponse
{
  ProtobufCMessage base;
  Nexusweaver__Kernel__V1__HealthCheckResponse__ServingStatus status;
  /*
   * Additional status message
   */
  char *message;
  /*
   * Kernel version
   */
  char *version;
};
#define NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_RESPONSE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&nexusweaver__kernel__v1__health_check_response__descriptor) \
    , NEXUSWEAVER__KERNEL__V1__HEALTH_CHECK_RESPONSE__SERVING_STATUS__UNKNOWN, (char *)protobuf_c_empty_string, (char *)protobuf_c_empty_string }


/* Nexusweaver__Kernel__V1__ResourceLimits methods */
void   nexusweaver__kernel__v1__resource_limits__init
                     (Nexusweaver__Kernel__V1__ResourceLimits         *message);
size_t nexusweaver__kernel__v1__resource_limits__get_packed_size
                     (const Nexusweaver__Kernel__V1__ResourceLimits   *message);
size_t nexusweaver__kernel__v1__resource_limits__pack
                     (const Nexusweaver__Kernel__V1__ResourceLimits   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__resource_limits__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__ResourceLimits   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__ResourceLimits *
       nexusweaver__kernel__v1__resource_limits__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__resource_limits__free_unpacked
                     (Nexusweaver__Kernel__V1__ResourceLimits *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry methods */
void   nexusweaver__kernel__v1__process_info__environment_entry__init
                     (Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry         *message);
/* Nexusweaver__Kernel__V1__ProcessInfo methods */
void   nexusweaver__kernel__v1__process_info__init
                     (Nexusweaver__Kernel__V1__ProcessInfo         *message);
size_t nexusweaver__kernel__v1__process_info__get_packed_size
                     (const Nexusweaver__Kernel__V1__ProcessInfo   *message);
size_t nexusweaver__kernel__v1__process_info__pack
                     (const Nexusweaver__Kernel__V1__ProcessInfo   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__process_info__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__ProcessInfo   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__ProcessInfo *
       nexusweaver__kernel__v1__process_info__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__process_info__free_unpacked
                     (Nexusweaver__Kernel__V1__ProcessInfo *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__StartProcessRequest methods */
void   nexusweaver__kernel__v1__start_process_request__init
                     (Nexusweaver__Kernel__V1__StartProcessRequest         *message);
size_t nexusweaver__kernel__v1__start_process_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__StartProcessRequest   *message);
size_t nexusweaver__kernel__v1__start_process_request__pack
                     (const Nexusweaver__Kernel__V1__StartProcessRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__start_process_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__StartProcessRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__StartProcessRequest *
       nexusweaver__kernel__v1__start_process_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__start_process_request__free_unpacked
                     (Nexusweaver__Kernel__V1__StartProcessRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__StartProcessResponse methods */
void   nexusweaver__kernel__v1__start_process_response__init
                     (Nexusweaver__Kernel__V1__StartProcessResponse         *message);
size_t nexusweaver__kernel__v1__start_process_response__get_packed_size
                     (const Nexusweaver__Kernel__V1__StartProcessResponse   *message);
size_t nexusweaver__kernel__v1__start_process_response__pack
                     (const Nexusweaver__Kernel__V1__StartProcessResponse   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__start_process_response__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__StartProcessResponse   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__StartProcessResponse *
       nexusweaver__kernel__v1__start_process_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__start_process_response__free_unpacked
                     (Nexusweaver__Kernel__V1__StartProcessResponse *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__StopProcessRequest methods */
void   nexusweaver__kernel__v1__stop_process_request__init
                     (Nexusweaver__Kernel__V1__StopProcessRequest         *message);
size_t nexusweaver__kernel__v1__stop_process_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__StopProcessRequest   *message);
size_t nexusweaver__kernel__v1__stop_process_request__pack
                     (const Nexusweaver__Kernel__V1__StopProcessRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__stop_process_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__StopProcessRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__StopProcessRequest *
       nexusweaver__kernel__v1__stop_process_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__stop_process_request__free_unpacked
                     (Nexusweaver__Kernel__V1__StopProcessRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__StopProcessResponse methods */
void   nexusweaver__kernel__v1__stop_process_response__init
                     (Nexusweaver__Kernel__V1__StopProcessResponse         *message);
size_t nexusweaver__kernel__v1__stop_process_response__get_packed_size
                     (const Nexusweaver__Kernel__V1__StopProcessResponse   *message);
size_t nexusweaver__kernel__v1__stop_process_response__pack
                     (const Nexusweaver__Kernel__V1__StopProcessResponse   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__stop_process_response__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__StopProcessResponse   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__StopProcessResponse *
       nexusweaver__kernel__v1__stop_process_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__stop_process_response__free_unpacked
                     (Nexusweaver__Kernel__V1__StopProcessResponse *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__GetProcessRequest methods */
void   nexusweaver__kernel__v1__get_process_request__init
                     (Nexusweaver__Kernel__V1__GetProcessRequest         *message);
size_t nexusweaver__kernel__v1__get_process_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__GetProcessRequest   *message);
size_t nexusweaver__kernel__v1__get_process_request__pack
                     (const Nexusweaver__Kernel__V1__GetProcessRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__get_process_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__GetProcessRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__GetProcessRequest *
       nexusweaver__kernel__v1__get_process_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__get_process_request__free_unpacked
                     (Nexusweaver__Kernel__V1__GetProcessRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__GetProcessResponse methods */
void   nexusweaver__kernel__v1__get_process_response__init
                     (Nexusweaver__Kernel__V1__GetProcessResponse         *message);
size_t nexusweaver__kernel__v1__get_process_response__get_packed_size
                     (const Nexusweaver__Kernel__V1__GetProcessResponse   *message);
size_t nexusweaver__kernel__v1__get_process_response__pack
                     (const Nexusweaver__Kernel__V1__GetProcessResponse   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__get_process_response__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__GetProcessResponse   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__GetProcessResponse *
       nexusweaver__kernel__v1__get_process_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__get_process_response__free_unpacked
                     (Nexusweaver__Kernel__V1__GetProcessResponse *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__ListProcessesRequest methods */
void   nexusweaver__kernel__v1__list_processes_request__init
                     (Nexusweaver__Kernel__V1__ListProcessesRequest         *message);
size_t nexusweaver__kernel__v1__list_processes_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__ListProcessesRequest   *message);
size_t nexusweaver__kernel__v1__list_processes_request__pack
                     (const Nexusweaver__Kernel__V1__ListProcessesRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__list_processes_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__ListProcessesRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__ListProcessesRequest *
       nexusweaver__kernel__v1__list_processes_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__list_processes_request__free_unpacked
                     (Nexusweaver__Kernel__V1__ListProcessesRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__ListProcessesResponse methods */
void   nexusweaver__kernel__v1__list_processes_response__init
                     (Nexusweaver__Kernel__V1__ListProcessesResponse         *message);
size_t nexusweaver__kernel__v1__list_processes_response__get_packed_size
                     (const Nexusweaver__Kernel__V1__ListProcessesResponse   *message);
size_t nexusweaver__kernel__v1__list_processes_response__pack
                     (const Nexusweaver__Kernel__V1__ListProcessesResponse   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__list_processes_response__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__ListProcessesResponse   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__ListProcessesResponse *
       nexusweaver__kernel__v1__list_processes_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__list_processes_response__free_unpacked
                     (Nexusweaver__Kernel__V1__ListProcessesResponse *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__UpdateLimitsRequest methods */
void   nexusweaver__kernel__v1__update_limits_request__init
                     (Nexusweaver__Kernel__V1__UpdateLimitsRequest         *message);
size_t nexusweaver__kernel__v1__update_limits_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__UpdateLimitsRequest   *message);
size_t nexusweaver__kernel__v1__update_limits_request__pack
                     (const Nexusweaver__Kernel__V1__UpdateLimitsRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__update_limits_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__UpdateLimitsRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__UpdateLimitsRequest *
       nexusweaver__kernel__v1__update_limits_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__update_limits_request__free_unpacked
                     (Nexusweaver__Kernel__V1__UpdateLimitsRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__UpdateLimitsResponse methods */
void   nexusweaver__kernel__v1__update_limits_response__init
                     (Nexusweaver__Kernel__V1__UpdateLimitsResponse         *message);
size_t nexusweaver__kernel__v1__update_limits_response__get_packed_size
                     (const Nexusweaver__Kernel__V1__UpdateLimitsResponse   *message);
size_t nexusweaver__kernel__v1__update_limits_response__pack
                     (const Nexusweaver__Kernel__V1__UpdateLimitsResponse   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__update_limits_response__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__UpdateLimitsResponse   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__UpdateLimitsResponse *
       nexusweaver__kernel__v1__update_limits_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__update_limits_response__free_unpacked
                     (Nexusweaver__Kernel__V1__UpdateLimitsResponse *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__StreamLogsRequest methods */
void   nexusweaver__kernel__v1__stream_logs_request__init
                     (Nexusweaver__Kernel__V1__StreamLogsRequest         *message);
size_t nexusweaver__kernel__v1__stream_logs_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__StreamLogsRequest   *message);
size_t nexusweaver__kernel__v1__stream_logs_request__pack
                     (const Nexusweaver__Kernel__V1__StreamLogsRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__stream_logs_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__StreamLogsRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__StreamLogsRequest *
       nexusweaver__kernel__v1__stream_logs_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__stream_logs_request__free_unpacked
                     (Nexusweaver__Kernel__V1__StreamLogsRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__LogEntry methods */
void   nexusweaver__kernel__v1__log_entry__init
                     (Nexusweaver__Kernel__V1__LogEntry         *message);
size_t nexusweaver__kernel__v1__log_entry__get_packed_size
                     (const Nexusweaver__Kernel__V1__LogEntry   *message);
size_t nexusweaver__kernel__v1__log_entry__pack
                     (const Nexusweaver__Kernel__V1__LogEntry   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__log_entry__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__LogEntry   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__LogEntry *
       nexusweaver__kernel__v1__log_entry__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__log_entry__free_unpacked
                     (Nexusweaver__Kernel__V1__LogEntry *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__ProcessStats methods */
void   nexusweaver__kernel__v1__process_stats__init
                     (Nexusweaver__Kernel__V1__ProcessStats         *message);
size_t nexusweaver__kernel__v1__process_stats__get_packed_size
                     (const Nexusweaver__Kernel__V1__ProcessStats   *message);
size_t nexusweaver__kernel__v1__process_stats__pack
                     (const Nexusweaver__Kernel__V1__ProcessStats   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__process_stats__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__ProcessStats   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__ProcessStats *
       nexusweaver__kernel__v1__process_stats__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__process_stats__free_unpacked
                     (Nexusweaver__Kernel__V1__ProcessStats *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__GetStatsRequest methods */
void   nexusweaver__kernel__v1__get_stats_request__init
                     (Nexusweaver__Kernel__V1__GetStatsRequest         *message);
size_t nexusweaver__kernel__v1__get_stats_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__GetStatsRequest   *message);
size_t nexusweaver__kernel__v1__get_stats_request__pack
                     (const Nexusweaver__Kernel__V1__GetStatsRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__get_stats_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__GetStatsRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__GetStatsRequest *
       nexusweaver__kernel__v1__get_stats_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__get_stats_request__free_unpacked
                     (Nexusweaver__Kernel__V1__GetStatsRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__GetStatsResponse methods */
void   nexusweaver__kernel__v1__get_stats_response__init
                     (Nexusweaver__Kernel__V1__GetStatsResponse         *message);
size_t nexusweaver__kernel__v1__get_stats_response__get_packed_size
                     (const Nexusweaver__Kernel__V1__GetStatsResponse   *message);
size_t nexusweaver__kernel__v1__get_stats_response__pack
                     (const Nexusweaver__Kernel__V1__GetStatsResponse   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__get_stats_response__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__GetStatsResponse   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__GetStatsResponse *
       nexusweaver__kernel__v1__get_stats_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__get_stats_response__free_unpacked
                     (Nexusweaver__Kernel__V1__GetStatsResponse *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__HealthCheckRequest methods */
void   nexusweaver__kernel__v1__health_check_request__init
                     (Nexusweaver__Kernel__V1__HealthCheckRequest         *message);
size_t nexusweaver__kernel__v1__health_check_request__get_packed_size
                     (const Nexusweaver__Kernel__V1__HealthCheckRequest   *message);
size_t nexusweaver__kernel__v1__health_check_request__pack
                     (const Nexusweaver__Kernel__V1__HealthCheckRequest   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__health_check_request__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__HealthCheckRequest   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__HealthCheckRequest *
       nexusweaver__kernel__v1__health_check_request__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__health_check_request__free_unpacked
                     (Nexusweaver__Kernel__V1__HealthCheckRequest *message,
                      ProtobufCAllocator *allocator);
/* Nexusweaver__Kernel__V1__HealthCheckResponse methods */
void   nexusweaver__kernel__v1__health_check_response__init
                     (Nexusweaver__Kernel__V1__HealthCheckResponse         *message);
size_t nexusweaver__kernel__v1__health_check_response__get_packed_size
                     (const Nexusweaver__Kernel__V1__HealthCheckResponse   *message);
size_t nexusweaver__kernel__v1__health_check_response__pack
                     (const Nexusweaver__Kernel__V1__HealthCheckResponse   *message,
                      uint8_t             *out);
size_t nexusweaver__kernel__v1__health_check_response__pack_to_buffer
                     (const Nexusweaver__Kernel__V1__HealthCheckResponse   *message,
                      ProtobufCBuffer     *buffer);
Nexusweaver__Kernel__V1__HealthCheckResponse *
       nexusweaver__kernel__v1__health_check_response__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   nexusweaver__kernel__v1__health_check_response__free_unpacked
                     (Nexusweaver__Kernel__V1__HealthCheckResponse *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Nexusweaver__Kernel__V1__ResourceLimits_Closure)
                 (const Nexusweaver__Kernel__V1__ResourceLimits *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry_Closure)
                 (const Nexusweaver__Kernel__V1__ProcessInfo__EnvironmentEntry *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__ProcessInfo_Closure)
                 (const Nexusweaver__Kernel__V1__ProcessInfo *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__StartProcessRequest_Closure)
                 (const Nexusweaver__Kernel__V1__StartProcessRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__StartProcessResponse_Closure)
                 (const Nexusweaver__Kernel__V1__StartProcessResponse *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__StopProcessRequest_Closure)
                 (const Nexusweaver__Kernel__V1__StopProcessRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__StopProcessResponse_Closure)
                 (const Nexusweaver__Kernel__V1__StopProcessResponse *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__GetProcessRequest_Closure)
                 (const Nexusweaver__Kernel__V1__GetProcessRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__GetProcessResponse_Closure)
                 (const Nexusweaver__Kernel__V1__GetProcessResponse *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__ListProcessesRequest_Closure)
                 (const Nexusweaver__Kernel__V1__ListProcessesRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__ListProcessesResponse_Closure)
                 (const Nexusweaver__Kernel__V1__ListProcessesResponse *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__UpdateLimitsRequest_Closure)
                 (const Nexusweaver__Kernel__V1__UpdateLimitsRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__UpdateLimitsResponse_Closure)
                 (const Nexusweaver__Kernel__V1__UpdateLimitsResponse *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__StreamLogsRequest_Closure)
                 (const Nexusweaver__Kernel__V1__StreamLogsRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__LogEntry_Closure)
                 (const Nexusweaver__Kernel__V1__LogEntry *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__ProcessStats_Closure)
                 (const Nexusweaver__Kernel__V1__ProcessStats *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__GetStatsRequest_Closure)
                 (const Nexusweaver__Kernel__V1__GetStatsRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__GetStatsResponse_Closure)
                 (const Nexusweaver__Kernel__V1__GetStatsResponse *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__HealthCheckRequest_Closure)
                 (const Nexusweaver__Kernel__V1__HealthCheckRequest *message,
                  void *closure_data);
typedef void (*Nexusweaver__Kernel__V1__HealthCheckResponse_Closure)
                 (const Nexusweaver__Kernel__V1__HealthCheckResponse *message,
                  void *closure_data);

/* --- services --- */

typedef struct Nexusweaver__Kernel__V1__KernelService_Service Nexusweaver__Kernel__V1__KernelService_Service;
struct Nexusweaver__Kernel__V1__KernelService_Service
{
  ProtobufCService base;
  void (*start_process)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                        const Nexusweaver__Kernel__V1__StartProcessRequest *input,
                        Nexusweaver__Kernel__V1__StartProcessResponse_Closure closure,
                        void *closure_data);
  void (*stop_process)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                       const Nexusweaver__Kernel__V1__StopProcessRequest *input,
                       Nexusweaver__Kernel__V1__StopProcessResponse_Closure closure,
                       void *closure_data);
  void (*get_process)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                      const Nexusweaver__Kernel__V1__GetProcessRequest *input,
                      Nexusweaver__Kernel__V1__GetProcessResponse_Closure closure,
                      void *closure_data);
  void (*list_processes)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                         const Nexusweaver__Kernel__V1__ListProcessesRequest *input,
                         Nexusweaver__Kernel__V1__ListProcessesResponse_Closure closure,
                         void *closure_data);
  void (*update_limits)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                        const Nexusweaver__Kernel__V1__UpdateLimitsRequest *input,
                        Nexusweaver__Kernel__V1__UpdateLimitsResponse_Closure closure,
                        void *closure_data);
  void (*stream_logs)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                      const Nexusweaver__Kernel__V1__StreamLogsRequest *input,
                      Nexusweaver__Kernel__V1__LogEntry_Closure closure,
                      void *closure_data);
  void (*get_stats)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                    const Nexusweaver__Kernel__V1__GetStatsRequest *input,
                    Nexusweaver__Kernel__V1__GetStatsResponse_Closure closure,
                    void *closure_data);
  void (*health_check)(Nexusweaver__Kernel__V1__KernelService_Service *service,
                       const Nexusweaver__Kernel__V1__HealthCheckRequest *input,
                       Nexusweaver__Kernel__V1__HealthCheckResponse_Closure closure,
                       void *closure_data);
};
typedef void (*Nexusweaver__Kernel__V1__KernelService_ServiceDestroy)(Nexusweaver__Kernel__V1__KernelService_Service *);
void nexusweaver__kernel__v1__kernel_service__init (Nexusweaver__Kernel__V1__KernelService_Service *service,
                                                    Nexusweaver__Kernel__V1__KernelService_ServiceDestroy destroy);
#define NEXUSWEAVER__KERNEL__V1__KERNEL_SERVICE__BASE_INIT \
    { &nexusweaver__kernel__v1__kernel_service__descriptor, protobuf_c_service_invoke_internal, NULL }
#define NEXUSWEAVER__KERNEL__V1__KERNEL_SERVICE__INIT(function_prefix__) \
    { NEXUSWEAVER__KERNEL__V1__KERNEL_SERVICE__BASE_INIT,\
      function_prefix__ ## start_process,\
      function_prefix__ ## stop_process,\
      function_prefix__ ## get_process,\
      function_prefix__ ## list_processes,\
      function_prefix__ ## update_limits,\
      function_prefix__ ## stream_logs,\
      function_prefix__ ## get_stats,\
      function_prefix__ ## health_check  }
void nexusweaver__kernel__v1__kernel_service__start_process(ProtobufCService *service,
                                                            const Nexusweaver__Kernel__V1__StartProcessRequest *input,
                                                            Nexusweaver__Kernel__V1__StartProcessResponse_Closure closure,
                                                            void *closure_data);
void nexusweaver__kernel__v1__kernel_service__stop_process(ProtobufCService *service,
                                                           const Nexusweaver__Kernel__V1__StopProcessRequest *input,
                                                           Nexusweaver__Kernel__V1__StopProcessResponse_Closure closure,
                                                           void *closure_data);
void nexusweaver__kernel__v1__kernel_service__get_process(ProtobufCService *service,
                                                          const Nexusweaver__Kernel__V1__GetProcessRequest *input,
                                                          Nexusweaver__Kernel__V1__GetProcessResponse_Closure closure,
                                                          void *closure_data);
void nexusweaver__kernel__v1__kernel_service__list_processes(ProtobufCService *service,
                                                             const Nexusweaver__Kernel__V1__ListProcessesRequest *input,
                                                             Nexusweaver__Kernel__V1__ListProcessesResponse_Closure closure,
                                                             void *closure_data);
void nexusweaver__kernel__v1__kernel_service__update_limits(ProtobufCService *service,
                                                            const Nexusweaver__Kernel__V1__UpdateLimitsRequest *input,
                                                            Nexusweaver__Kernel__V1__UpdateLimitsResponse_Closure closure,
                                                            void *closure_data);
void nexusweaver__kernel__v1__kernel_service__stream_logs(ProtobufCService *service,
                                                          const Nexusweaver__Kernel__V1__StreamLogsRequest *input,
                                                          Nexusweaver__Kernel__V1__LogEntry_Closure closure,
                                                          void *closure_data);
void nexusweaver__kernel__v1__kernel_service__get_stats(ProtobufCService *service,
                                                        const Nexusweaver__Kernel__V1__GetStatsRequest *input,
                                                        Nexusweaver__Kernel__V1__GetStatsResponse_Closure closure,
                                                        void *closure_data);
void nexusweaver__kernel__v1__kernel_service__health_check(ProtobufCService *service,
                                                           const Nexusweaver__Kernel__V1__HealthCheckRequest *input,
                                                           Nexusweaver__Kernel__V1__HealthCheckResponse_Closure closure,
                                                           void *closure_data);

/* --- descriptors --- */

extern const ProtobufCEnumDescriptor    nexusweaver__kernel__v1__process_state__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__resource_limits__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__process_info__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__process_info__environment_entry__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__start_process_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__start_process_response__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__stop_process_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__stop_process_response__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__get_process_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__get_process_response__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__list_processes_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__list_processes_response__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__update_limits_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__update_limits_response__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__stream_logs_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__log_entry__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__process_stats__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__get_stats_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__get_stats_response__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__health_check_request__descriptor;
extern const ProtobufCMessageDescriptor nexusweaver__kernel__v1__health_check_response__descriptor;
extern const ProtobufCEnumDescriptor    nexusweaver__kernel__v1__health_check_response__serving_status__descriptor;
extern const ProtobufCServiceDescriptor nexusweaver__kernel__v1__kernel_service__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_kernel_2eproto__INCLUDED */
