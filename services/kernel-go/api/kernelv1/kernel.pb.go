// Nexus Weaver Kernel API - Go Implementation
// Copyright (c) 2024 Nexus Weaver Project

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v5.29.3
// source: kernel.proto

package kernelv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request to start a process
type StartProcessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Process name (used for container naming)
	ProcessName string `protobuf:"bytes,1,opt,name=process_name,json=processName,proto3" json:"process_name,omitempty"`
	// Programming language runtime
	Language string `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`
	// Command to execute (optional, will use default if empty)
	Command string `protobuf:"bytes,3,opt,name=command,proto3" json:"command,omitempty"`
	// Node ID (for compatibility with Control Plane)
	NodeId string `protobuf:"bytes,4,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	// Port to expose
	Port int32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// Memory limit in bytes
	MemoryLimit int64 `protobuf:"varint,6,opt,name=memory_limit,json=memoryLimit,proto3" json:"memory_limit,omitempty"`
	// CPU shares (relative weight)
	CpuShares int32 `protobuf:"varint,7,opt,name=cpu_shares,json=cpuShares,proto3" json:"cpu_shares,omitempty"`
	// Environment variables
	Environment   map[string]string `protobuf:"bytes,8,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartProcessRequest) Reset() {
	*x = StartProcessRequest{}
	mi := &file_kernel_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProcessRequest) ProtoMessage() {}

func (x *StartProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProcessRequest.ProtoReflect.Descriptor instead.
func (*StartProcessRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{0}
}

func (x *StartProcessRequest) GetProcessName() string {
	if x != nil {
		return x.ProcessName
	}
	return ""
}

func (x *StartProcessRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *StartProcessRequest) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *StartProcessRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *StartProcessRequest) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *StartProcessRequest) GetMemoryLimit() int64 {
	if x != nil {
		return x.MemoryLimit
	}
	return 0
}

func (x *StartProcessRequest) GetCpuShares() int32 {
	if x != nil {
		return x.CpuShares
	}
	return 0
}

func (x *StartProcessRequest) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

// Response from starting a process
type StartProcessResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success flag
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Process ID (Docker container ID prefix)
	ProcessId string `protobuf:"bytes,2,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	// Response message
	Message       string `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StartProcessResponse) Reset() {
	*x = StartProcessResponse{}
	mi := &file_kernel_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartProcessResponse) ProtoMessage() {}

func (x *StartProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartProcessResponse.ProtoReflect.Descriptor instead.
func (*StartProcessResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{1}
}

func (x *StartProcessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartProcessResponse) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *StartProcessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to stop a process
type StopProcessRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Process ID to stop
	ProcessId     string `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopProcessRequest) Reset() {
	*x = StopProcessRequest{}
	mi := &file_kernel_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopProcessRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopProcessRequest) ProtoMessage() {}

func (x *StopProcessRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopProcessRequest.ProtoReflect.Descriptor instead.
func (*StopProcessRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{2}
}

func (x *StopProcessRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

// Response from stopping a process
type StopProcessResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Success flag
	Success bool `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	// Response message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopProcessResponse) Reset() {
	*x = StopProcessResponse{}
	mi := &file_kernel_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopProcessResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopProcessResponse) ProtoMessage() {}

func (x *StopProcessResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopProcessResponse.ProtoReflect.Descriptor instead.
func (*StopProcessResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{3}
}

func (x *StopProcessResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopProcessResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Request to get process status
type GetProcessStatusRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Process ID
	ProcessId     string `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessStatusRequest) Reset() {
	*x = GetProcessStatusRequest{}
	mi := &file_kernel_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusRequest) ProtoMessage() {}

func (x *GetProcessStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessStatusRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{4}
}

func (x *GetProcessStatusRequest) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

// Response with process status
type GetProcessStatusResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Process status (running, stopped, failed, not_found)
	Status        string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessStatusResponse) Reset() {
	*x = GetProcessStatusResponse{}
	mi := &file_kernel_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessStatusResponse) ProtoMessage() {}

func (x *GetProcessStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessStatusResponse.ProtoReflect.Descriptor instead.
func (*GetProcessStatusResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{5}
}

func (x *GetProcessStatusResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

// Request to list processes
type ListProcessesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProcessesRequest) Reset() {
	*x = ListProcessesRequest{}
	mi := &file_kernel_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProcessesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessesRequest) ProtoMessage() {}

func (x *ListProcessesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessesRequest.ProtoReflect.Descriptor instead.
func (*ListProcessesRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{6}
}

// Process information for listing
type ProcessInfo struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Process ID
	ProcessId string `protobuf:"bytes,1,opt,name=process_id,json=processId,proto3" json:"process_id,omitempty"`
	// Container/process name
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	// Current status
	Status string `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	// Programming language
	Language string `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`
	// Exposed port
	Port int32 `protobuf:"varint,5,opt,name=port,proto3" json:"port,omitempty"`
	// Creation timestamp (Unix seconds)
	CreatedAt     int64 `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessInfo) Reset() {
	*x = ProcessInfo{}
	mi := &file_kernel_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessInfo) ProtoMessage() {}

func (x *ProcessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessInfo.ProtoReflect.Descriptor instead.
func (*ProcessInfo) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessInfo) GetProcessId() string {
	if x != nil {
		return x.ProcessId
	}
	return ""
}

func (x *ProcessInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessInfo) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessInfo) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ProcessInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *ProcessInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// Response with process list
type ListProcessesResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of processes
	Processes     []*ProcessInfo `protobuf:"bytes,1,rep,name=processes,proto3" json:"processes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListProcessesResponse) Reset() {
	*x = ListProcessesResponse{}
	mi := &file_kernel_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListProcessesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListProcessesResponse) ProtoMessage() {}

func (x *ListProcessesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListProcessesResponse.ProtoReflect.Descriptor instead.
func (*ListProcessesResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{8}
}

func (x *ListProcessesResponse) GetProcesses() []*ProcessInfo {
	if x != nil {
		return x.Processes
	}
	return nil
}

// Health check request
type HealthCheckRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Optional service name to check
	Service       string `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_kernel_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{9}
}

func (x *HealthCheckRequest) GetService() string {
	if x != nil {
		return x.Service
	}
	return ""
}

// Health check response
type HealthCheckResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Health status (healthy, unhealthy)
	Status string `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	// Status message
	Message       string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_kernel_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_kernel_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_kernel_proto_rawDescGZIP(), []int{10}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_kernel_proto protoreflect.FileDescriptor

const file_kernel_proto_rawDesc = "" +
	"\n" +
	"\fkernel.proto\x12\x15nexusweaver.kernel.v1\"\xfc\x02\n" +
	"\x13StartProcessRequest\x12!\n" +
	"\fprocess_name\x18\x01 \x01(\tR\vprocessName\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x18\n" +
	"\acommand\x18\x03 \x01(\tR\acommand\x12\x17\n" +
	"\anode_id\x18\x04 \x01(\tR\x06nodeId\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\x12!\n" +
	"\fmemory_limit\x18\x06 \x01(\x03R\vmemoryLimit\x12\x1d\n" +
	"\n" +
	"cpu_shares\x18\a \x01(\x05R\tcpuShares\x12]\n" +
	"\venvironment\x18\b \x03(\v2;.nexusweaver.kernel.v1.StartProcessRequest.EnvironmentEntryR\venvironment\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"i\n" +
	"\x14StartProcessResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x1d\n" +
	"\n" +
	"process_id\x18\x02 \x01(\tR\tprocessId\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"3\n" +
	"\x12StopProcessRequest\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\"I\n" +
	"\x13StopProcessResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"8\n" +
	"\x17GetProcessStatusRequest\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\"2\n" +
	"\x18GetProcessStatusResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\"\x16\n" +
	"\x14ListProcessesRequest\"\xa7\x01\n" +
	"\vProcessInfo\x12\x1d\n" +
	"\n" +
	"process_id\x18\x01 \x01(\tR\tprocessId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\x12\x1a\n" +
	"\blanguage\x18\x04 \x01(\tR\blanguage\x12\x12\n" +
	"\x04port\x18\x05 \x01(\x05R\x04port\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\"Y\n" +
	"\x15ListProcessesResponse\x12@\n" +
	"\tprocesses\x18\x01 \x03(\v2\".nexusweaver.kernel.v1.ProcessInfoR\tprocesses\".\n" +
	"\x12HealthCheckRequest\x12\x18\n" +
	"\aservice\x18\x01 \x01(\tR\aservice\"G\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage2\xa5\x04\n" +
	"\rKernelService\x12g\n" +
	"\fStartProcess\x12*.nexusweaver.kernel.v1.StartProcessRequest\x1a+.nexusweaver.kernel.v1.StartProcessResponse\x12d\n" +
	"\vStopProcess\x12).nexusweaver.kernel.v1.StopProcessRequest\x1a*.nexusweaver.kernel.v1.StopProcessResponse\x12s\n" +
	"\x10GetProcessStatus\x12..nexusweaver.kernel.v1.GetProcessStatusRequest\x1a/.nexusweaver.kernel.v1.GetProcessStatusResponse\x12j\n" +
	"\rListProcesses\x12+.nexusweaver.kernel.v1.ListProcessesRequest\x1a,.nexusweaver.kernel.v1.ListProcessesResponse\x12d\n" +
	"\vHealthCheck\x12).nexusweaver.kernel.v1.HealthCheckRequest\x1a*.nexusweaver.kernel.v1.HealthCheckResponseB\x19Z\x17./api/kernelv1;kernelv1b\x06proto3"

var (
	file_kernel_proto_rawDescOnce sync.Once
	file_kernel_proto_rawDescData []byte
)

func file_kernel_proto_rawDescGZIP() []byte {
	file_kernel_proto_rawDescOnce.Do(func() {
		file_kernel_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_kernel_proto_rawDesc), len(file_kernel_proto_rawDesc)))
	})
	return file_kernel_proto_rawDescData
}

var file_kernel_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_kernel_proto_goTypes = []any{
	(*StartProcessRequest)(nil),      // 0: nexusweaver.kernel.v1.StartProcessRequest
	(*StartProcessResponse)(nil),     // 1: nexusweaver.kernel.v1.StartProcessResponse
	(*StopProcessRequest)(nil),       // 2: nexusweaver.kernel.v1.StopProcessRequest
	(*StopProcessResponse)(nil),      // 3: nexusweaver.kernel.v1.StopProcessResponse
	(*GetProcessStatusRequest)(nil),  // 4: nexusweaver.kernel.v1.GetProcessStatusRequest
	(*GetProcessStatusResponse)(nil), // 5: nexusweaver.kernel.v1.GetProcessStatusResponse
	(*ListProcessesRequest)(nil),     // 6: nexusweaver.kernel.v1.ListProcessesRequest
	(*ProcessInfo)(nil),              // 7: nexusweaver.kernel.v1.ProcessInfo
	(*ListProcessesResponse)(nil),    // 8: nexusweaver.kernel.v1.ListProcessesResponse
	(*HealthCheckRequest)(nil),       // 9: nexusweaver.kernel.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),      // 10: nexusweaver.kernel.v1.HealthCheckResponse
	nil,                              // 11: nexusweaver.kernel.v1.StartProcessRequest.EnvironmentEntry
}
var file_kernel_proto_depIdxs = []int32{
	11, // 0: nexusweaver.kernel.v1.StartProcessRequest.environment:type_name -> nexusweaver.kernel.v1.StartProcessRequest.EnvironmentEntry
	7,  // 1: nexusweaver.kernel.v1.ListProcessesResponse.processes:type_name -> nexusweaver.kernel.v1.ProcessInfo
	0,  // 2: nexusweaver.kernel.v1.KernelService.StartProcess:input_type -> nexusweaver.kernel.v1.StartProcessRequest
	2,  // 3: nexusweaver.kernel.v1.KernelService.StopProcess:input_type -> nexusweaver.kernel.v1.StopProcessRequest
	4,  // 4: nexusweaver.kernel.v1.KernelService.GetProcessStatus:input_type -> nexusweaver.kernel.v1.GetProcessStatusRequest
	6,  // 5: nexusweaver.kernel.v1.KernelService.ListProcesses:input_type -> nexusweaver.kernel.v1.ListProcessesRequest
	9,  // 6: nexusweaver.kernel.v1.KernelService.HealthCheck:input_type -> nexusweaver.kernel.v1.HealthCheckRequest
	1,  // 7: nexusweaver.kernel.v1.KernelService.StartProcess:output_type -> nexusweaver.kernel.v1.StartProcessResponse
	3,  // 8: nexusweaver.kernel.v1.KernelService.StopProcess:output_type -> nexusweaver.kernel.v1.StopProcessResponse
	5,  // 9: nexusweaver.kernel.v1.KernelService.GetProcessStatus:output_type -> nexusweaver.kernel.v1.GetProcessStatusResponse
	8,  // 10: nexusweaver.kernel.v1.KernelService.ListProcesses:output_type -> nexusweaver.kernel.v1.ListProcessesResponse
	10, // 11: nexusweaver.kernel.v1.KernelService.HealthCheck:output_type -> nexusweaver.kernel.v1.HealthCheckResponse
	7,  // [7:12] is the sub-list for method output_type
	2,  // [2:7] is the sub-list for method input_type
	2,  // [2:2] is the sub-list for extension type_name
	2,  // [2:2] is the sub-list for extension extendee
	0,  // [0:2] is the sub-list for field type_name
}

func init() { file_kernel_proto_init() }
func file_kernel_proto_init() {
	if File_kernel_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_kernel_proto_rawDesc), len(file_kernel_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_kernel_proto_goTypes,
		DependencyIndexes: file_kernel_proto_depIdxs,
		MessageInfos:      file_kernel_proto_msgTypes,
	}.Build()
	File_kernel_proto = out.File
	file_kernel_proto_goTypes = nil
	file_kernel_proto_depIdxs = nil
}
