name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  # Kernel (C) CI
  kernel:
    name: Kernel Build & Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            gcc make pkg-config \
            libprotobuf-c-dev protobuf-c-compiler \
            libcheck-dev cppcheck clang-format
      
      - name: Build kernel
        working-directory: services/kernel
        run: make build
      
      - name: Run tests
        working-directory: services/kernel
        run: make test
      
      - name: Run linter
        working-directory: services/kernel
        run: make lint
      
      - name: Check formatting
        working-directory: services/kernel
        run: |
          make format
          git diff --exit-code
      
      - name: Build Docker image
        working-directory: services/kernel
        run: docker build -t nexus-weaver/kernel:test .

  # Control Plane (Java) CI
  control-plane:
    name: Control Plane Build & Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      
      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      
      - name: Build with Maven
        working-directory: services/control-plane
        run: mvn clean compile
      
      - name: Run tests
        working-directory: services/control-plane
        run: mvn test
      
      - name: Check code style
        working-directory: services/control-plane
        run: mvn spotless:check
      
      - name: Build Docker image
        working-directory: services/control-plane
        run: docker build -t nexus-weaver/control-plane:test .

  # CLI (Python) CI
  cli:
    name: CLI Build & Test
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      
      - name: Install dependencies
        working-directory: services/cli
        run: |
          python -m pip install --upgrade pip
          pip install -e .
          pip install pytest black isort mypy ruff
      
      - name: Run tests
        working-directory: services/cli
        run: pytest
      
      - name: Check formatting
        working-directory: services/cli
        run: |
          black --check .
          isort --check-only .
      
      - name: Run linter
        working-directory: services/cli
        run: ruff check .
      
      - name: Type checking
        working-directory: services/cli
        run: mypy .

  # Dashboard (React/TypeScript) CI
  dashboard:
    name: Dashboard Build & Test
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: services/dashboard/package-lock.json
      
      - name: Install dependencies
        working-directory: services/dashboard
        run: npm ci
      
      - name: Run linter
        working-directory: services/dashboard
        run: npm run lint
      
      - name: Run tests
        working-directory: services/dashboard
        run: npm test -- --coverage
      
      - name: Build
        working-directory: services/dashboard
        run: npm run build
      
      - name: Build Docker image
        working-directory: services/dashboard
        run: docker build -t nexus-weaver/dashboard:test .

  # Integration tests
  integration:
    name: Integration Tests
    runs-on: ubuntu-22.04
    needs: [kernel, control-plane, cli, dashboard]
    steps:
      - uses: actions/checkout@v3
      
      - name: Start services
        run: docker-compose up -d
      
      - name: Wait for services
        run: |
          timeout 60 bash -c 'until docker-compose ps | grep -q "healthy"; do sleep 2; done'
      
      - name: Run integration tests
        run: ./tests/integration/run-integration-tests.sh
      
      - name: Collect logs
        if: failure()
        run: docker-compose logs
      
      - name: Stop services
        if: always()
        run: docker-compose down -v

  # Security scanning
  security:
    name: Security Scan
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
      
      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'
      
      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: 'trivy-results.sarif'